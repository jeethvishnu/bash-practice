- name: using default value this can be used as if we forget about giving variables the you can give like this
  hosts: localhost
  tasks:
  - name: print default vars
    ansible.builtin.debug:
      msg: "hello {{course | default('ansible')}}"

- name: upper case
  hosts: localhost
  vars:
    greetings: "hello, good mrng"
  tasks:
  - name: convert into uppercase
    ansible.builtin.debug:
      msg: "{{greetings | upper}}"

- name: lower case
  hosts: localhost
  vars:
    name: "VISHNU"
  tasks:
  - name: into lowercase
    ansible.builtin.debug:
      msg: "{{name | lower}}"

- name: remove duplicates
  hosts: localhost
  vars:
    numbers: [1,2,3,3,4,5]
  tasks:
  - name: duplicates
    ansible.builtin.debug:
      msg: "{{numbers | unique}}"

- name: finding max and min
  hosts: localhost
  vars:
    ages: [22,12,44,1,54]
  tasks:
  - name: max min
    ansible.builtin.debug:
      msg: "max is: {{ ages | max }} min is: {{ages | min}}"

- name: dictonary into items
  hosts: localhost
  vars:
    dict: 
      course: ansible
      duration: 2hr
  tasks:
  - name: before convert 
    ansible.builtin.debug:
      msg: "before: {{dict}}"
  - name: after
    ansible.builtin.debug:
      msg: "after: {{dict | dict2items}}"

- name: items to dict
  hosts: localhost
  vars:
    my_list:
    - {'key': 'course', 'val': 'ansible'}
    - {'key': 'durat','val': 22}
  tasks:
  - name: befor convert
    ansible.builtin.debug:
      msg: "before {{my_list}}"
  - name: after
    ansible.builtin.debug:
      msg: "after {{my_list | items2dict}}"
